# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import TestControl_pb2 as TestControl__pb2


class TestControlServiceStub(object):
    """version : 230711-0929

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterTestPlan = channel.unary_unary(
                '/TestControl.TestControlService/RegisterTestPlan',
                request_serializer=TestControl__pb2.RegisterTestPlanRequest.SerializeToString,
                response_deserializer=TestControl__pb2.RegisterTestPlanReply.FromString,
                )
        self.UnregisterTestPlan = channel.unary_unary(
                '/TestControl.TestControlService/UnregisterTestPlan',
                request_serializer=TestControl__pb2.UnregisterTestPlanRequest.SerializeToString,
                response_deserializer=TestControl__pb2.UnregisterTestPlanReply.FromString,
                )
        self.RunTestPlan = channel.unary_unary(
                '/TestControl.TestControlService/RunTestPlan',
                request_serializer=TestControl__pb2.RunTestPlanRequest.SerializeToString,
                response_deserializer=TestControl__pb2.RunTestPlanReply.FromString,
                )
        self.AbortTestPlan = channel.unary_unary(
                '/TestControl.TestControlService/AbortTestPlan',
                request_serializer=TestControl__pb2.AbortTestPlanRequest.SerializeToString,
                response_deserializer=TestControl__pb2.AbortTestPlanReply.FromString,
                )
        self.RegisterTestCase = channel.unary_unary(
                '/TestControl.TestControlService/RegisterTestCase',
                request_serializer=TestControl__pb2.RegisterTestCaseRequest.SerializeToString,
                response_deserializer=TestControl__pb2.RegisterTestCaseReply.FromString,
                )
        self.UnregisterTestCase = channel.unary_unary(
                '/TestControl.TestControlService/UnregisterTestCase',
                request_serializer=TestControl__pb2.UnregisterTestCaseRequest.SerializeToString,
                response_deserializer=TestControl__pb2.UnregisterTestCaseReply.FromString,
                )
        self.RunTestCase = channel.unary_unary(
                '/TestControl.TestControlService/RunTestCase',
                request_serializer=TestControl__pb2.RunTestCaseRequest.SerializeToString,
                response_deserializer=TestControl__pb2.RunTestCaseReply.FromString,
                )
        self.AbortTestCase = channel.unary_unary(
                '/TestControl.TestControlService/AbortTestCase',
                request_serializer=TestControl__pb2.AbortTestCaseRequest.SerializeToString,
                response_deserializer=TestControl__pb2.AbortTestCaseReply.FromString,
                )
        self.GetStatus = channel.unary_unary(
                '/TestControl.TestControlService/GetStatus',
                request_serializer=TestControl__pb2.GetStatusRequest.SerializeToString,
                response_deserializer=TestControl__pb2.GetStatusReply.FromString,
                )
        self.GetProgress = channel.unary_unary(
                '/TestControl.TestControlService/GetProgress',
                request_serializer=TestControl__pb2.GetProgressRequest.SerializeToString,
                response_deserializer=TestControl__pb2.GetProgressReply.FromString,
                )


class TestControlServiceServicer(object):
    """version : 230711-0929

    """

    def RegisterTestPlan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnregisterTestPlan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunTestPlan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AbortTestPlan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterTestCase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnregisterTestCase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunTestCase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AbortTestCase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProgress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TestControlServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterTestPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterTestPlan,
                    request_deserializer=TestControl__pb2.RegisterTestPlanRequest.FromString,
                    response_serializer=TestControl__pb2.RegisterTestPlanReply.SerializeToString,
            ),
            'UnregisterTestPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.UnregisterTestPlan,
                    request_deserializer=TestControl__pb2.UnregisterTestPlanRequest.FromString,
                    response_serializer=TestControl__pb2.UnregisterTestPlanReply.SerializeToString,
            ),
            'RunTestPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.RunTestPlan,
                    request_deserializer=TestControl__pb2.RunTestPlanRequest.FromString,
                    response_serializer=TestControl__pb2.RunTestPlanReply.SerializeToString,
            ),
            'AbortTestPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.AbortTestPlan,
                    request_deserializer=TestControl__pb2.AbortTestPlanRequest.FromString,
                    response_serializer=TestControl__pb2.AbortTestPlanReply.SerializeToString,
            ),
            'RegisterTestCase': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterTestCase,
                    request_deserializer=TestControl__pb2.RegisterTestCaseRequest.FromString,
                    response_serializer=TestControl__pb2.RegisterTestCaseReply.SerializeToString,
            ),
            'UnregisterTestCase': grpc.unary_unary_rpc_method_handler(
                    servicer.UnregisterTestCase,
                    request_deserializer=TestControl__pb2.UnregisterTestCaseRequest.FromString,
                    response_serializer=TestControl__pb2.UnregisterTestCaseReply.SerializeToString,
            ),
            'RunTestCase': grpc.unary_unary_rpc_method_handler(
                    servicer.RunTestCase,
                    request_deserializer=TestControl__pb2.RunTestCaseRequest.FromString,
                    response_serializer=TestControl__pb2.RunTestCaseReply.SerializeToString,
            ),
            'AbortTestCase': grpc.unary_unary_rpc_method_handler(
                    servicer.AbortTestCase,
                    request_deserializer=TestControl__pb2.AbortTestCaseRequest.FromString,
                    response_serializer=TestControl__pb2.AbortTestCaseReply.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=TestControl__pb2.GetStatusRequest.FromString,
                    response_serializer=TestControl__pb2.GetStatusReply.SerializeToString,
            ),
            'GetProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProgress,
                    request_deserializer=TestControl__pb2.GetProgressRequest.FromString,
                    response_serializer=TestControl__pb2.GetProgressReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TestControl.TestControlService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TestControlService(object):
    """version : 230711-0929

    """

    @staticmethod
    def RegisterTestPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TestControl.TestControlService/RegisterTestPlan',
            TestControl__pb2.RegisterTestPlanRequest.SerializeToString,
            TestControl__pb2.RegisterTestPlanReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnregisterTestPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TestControl.TestControlService/UnregisterTestPlan',
            TestControl__pb2.UnregisterTestPlanRequest.SerializeToString,
            TestControl__pb2.UnregisterTestPlanReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunTestPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TestControl.TestControlService/RunTestPlan',
            TestControl__pb2.RunTestPlanRequest.SerializeToString,
            TestControl__pb2.RunTestPlanReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AbortTestPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TestControl.TestControlService/AbortTestPlan',
            TestControl__pb2.AbortTestPlanRequest.SerializeToString,
            TestControl__pb2.AbortTestPlanReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterTestCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TestControl.TestControlService/RegisterTestCase',
            TestControl__pb2.RegisterTestCaseRequest.SerializeToString,
            TestControl__pb2.RegisterTestCaseReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnregisterTestCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TestControl.TestControlService/UnregisterTestCase',
            TestControl__pb2.UnregisterTestCaseRequest.SerializeToString,
            TestControl__pb2.UnregisterTestCaseReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunTestCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TestControl.TestControlService/RunTestCase',
            TestControl__pb2.RunTestCaseRequest.SerializeToString,
            TestControl__pb2.RunTestCaseReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AbortTestCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TestControl.TestControlService/AbortTestCase',
            TestControl__pb2.AbortTestCaseRequest.SerializeToString,
            TestControl__pb2.AbortTestCaseReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TestControl.TestControlService/GetStatus',
            TestControl__pb2.GetStatusRequest.SerializeToString,
            TestControl__pb2.GetStatusReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TestControl.TestControlService/GetProgress',
            TestControl__pb2.GetProgressRequest.SerializeToString,
            TestControl__pb2.GetProgressReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
